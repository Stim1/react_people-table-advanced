{"version":3,"sources":["pages/NotFoundPage.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","types/Centuries.ts","types/Gender.ts","utils/searchHelper.ts","components/LinkWithParams.tsx","components/PeopleFilters.tsx","components/PersonLink.tsx","types/TableHeaders.ts","components/PeopleTable.tsx","pages/PeoplePage.tsx","components/Navigation.tsx","App.tsx","components/Root.tsx","index.tsx"],"names":["NotFoundPage","className","HomePage","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","Centuries","Gender","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","LinkWithParams","children","to","useSearchParams","params","search","PeopleFilters","filterGenderStatus","setFilterGenderStatus","setSelectedCenturies","handleSearchChange","setSearchQuery","searchQuery","searchParams","setSearchParams","centuries","getAll","resetAllCenturies","values","map","sex","ALL","toLowerCase","charAt","role","tabIndex","onClick","onKeyDown","e","style","cursor","textDecoration","type","onChange","placeholder","century","includes","filter","cent","prev","c","toggleCentury","length","PersonLink","person","onSelect","slug","classNames","name","TableHeaders","PeopleTable","filteredPeople","selectedPersonSlug","handleSelectPerson","getParent","parentName","find","parent","sort","get","order","header","index","isActive","iconClass","handleSort","born","died","motherName","fatherName","PeoplePage","setSearcParams","useState","people","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","setSelectedPersonSlug","setFilteredPeople","selectedCenturies","useParams","useEffect","filtered","MALE","FEMALE","year","Math","ceil","a","b","localeCompare","loadPeople","data","event","target","selectedSlug","Navigation","getActive","App","Root","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cde0566d.chunk.js","sourcesContent":["export const NotFoundPage = () => (\n  <div>\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","export const HomePage = () => (\n  <div>\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum Centuries {\n  SIXTEENTH = '16',\n  SEVENTEENTH = '17',\n  EIGHTEENTH = '18',\n  NINETEENTH = '19',\n  TWENTIETH = '20',\n}\n","export enum Gender {\n  ALL = 'All',\n  MALE = 'Male',\n  FEMALE = 'Female',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  to: SearchParams;\n  children: React.ReactNode\n};\n\nexport const LinkWithParams:React.FC<Props>\n= ({\n  children,\n  to,\n}) => {\n  const [params] = useSearchParams();\n\n  return (\n    <Link\n      to={{ search: getSearchWith(params, to) }}\n    >\n      {children}\n    </Link>\n  );\n};\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Dispatch, SetStateAction } from 'react';\nimport { Centuries } from '../types/Centuries';\nimport { Gender } from '../types/Gender';\nimport { LinkWithParams } from './LinkWithParams';\n\ntype PeopleFiltersProps = {\n  filterGenderStatus: Gender;\n  setFilterGenderStatus: React.Dispatch<React.SetStateAction<Gender>>;\n  setSelectedCenturies: React.Dispatch<React.SetStateAction<string[]>>;\n  selectedCenturies: string[];\n  handleSearchChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  searchQuery: string;\n  setSearchQuery: Dispatch<SetStateAction<string>>;\n};\n\nexport const PeopleFilters: React.FC<PeopleFiltersProps> = ({\n  filterGenderStatus,\n  setFilterGenderStatus,\n  setSelectedCenturies,\n  handleSearchChange,\n  setSearchQuery,\n  searchQuery,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const centuries = searchParams.getAll('centuries' || []);\n\n  const toggleCentury = (century: string) => {\n    setSelectedCenturies(prev => (prev.includes(century)\n      ? prev.filter(c => c !== century)\n      : [...prev, century]));\n  };\n\n  const resetAllCenturies = () => {\n    const params = new URLSearchParams();\n\n    params.delete('centuries');\n    setSearchParams(params);\n    setSelectedCenturies([]);\n  };\n\n  const resetAllFilters = () => {\n    resetAllCenturies();\n    setFilterGenderStatus(Gender.ALL);\n    setSearchQuery('');\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {Object.values(Gender).map((sex) => (\n          <LinkWithParams\n            key={sex}\n            to={{\n              sex: sex === Gender.ALL ? null : sex.toLowerCase().charAt(0),\n            }}\n          >\n            <a\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => setFilterGenderStatus(sex)}\n              onKeyDown={(e) => e.key === 'Enter' && setFilterGenderStatus(sex)}\n              className={`panel-tab ${filterGenderStatus === sex ? 'is-active' : ''}`}\n              style={{ cursor: 'pointer', textDecoration: 'none' }}\n            >\n              {sex}\n            </a>\n          </LinkWithParams>\n        ))}\n\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            value={searchQuery}\n            onChange={handleSearchChange}\n            placeholder=\"Search\"\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {Object.values(Centuries).map((century) => (\n              <LinkWithParams\n                key={century}\n                to={{\n                  centuries: centuries.includes(century)\n                    ? centuries.filter(cent => cent !== century)\n                    : [...centuries, century],\n                }}\n              >\n                <button\n                  type=\"button\"\n                  onClick={() => toggleCentury(century)}\n                  className={`button mr-1 ${centuries.includes(century) ? 'is-info' : ''}`}\n                >\n                  {century}\n                </button>\n              </LinkWithParams>\n            ))}\n            <LinkWithParams to={{ centuries: [] }}>\n              <button\n                type=\"button\"\n                onClick={resetAllCenturies}\n                className={`button is-success ${centuries.length > 0 ? '' : 'is-outlined'}`}\n              >\n                All\n              </button>\n            </LinkWithParams>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          onClick={resetAllFilters}\n          className=\"button is-link is-outlined is-fullwidth\"\n          to=\".\"\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonLinkProps } from '../types/PersonLinkProps';\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person, onSelect }) => {\n  const handleClick = () => {\n    onSelect(person.slug);\n  };\n\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n      onClick={handleClick}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export enum TableHeaders {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n  Mother = 'Mother',\n  Father = 'Father',\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n// PeopleTable.tsx\n\nimport React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonLink } from './PersonLink';\nimport { TableHeaders } from '../types/TableHeaders';\nimport { PeopleTableProps } from '../types/PeopleTableProps';\n\nexport const PeopleTable: React.FC<PeopleTableProps> = ({\n  filteredPeople,\n  selectedPersonSlug,\n  handleSelectPerson,\n}) => {\n  const getParent = (parentName: string | null) => {\n    return filteredPeople.find((parent) => parent.name === parentName);\n  };\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const handleSort = (header: string) => {\n    const newParams = new URLSearchParams(searchParams);\n\n    if (sort === header.toLowerCase() && order === 'asc') {\n      newParams.set('sort', header.toLowerCase());\n      newParams.set('order', 'desc');\n    } else if (sort === header.toLowerCase() && order === 'desc') {\n      newParams.delete('sort');\n      newParams.delete('order');\n    } else {\n      newParams.set('sort', header.toLowerCase());\n      newParams.set('order', 'asc');\n    }\n\n    setSearchParams(newParams);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.values(TableHeaders).map((header, index) => {\n            const isActive = sort === header.toLowerCase();\n            const iconClass = classNames({\n              'fas fa-sort-up': isActive && order === 'asc',\n              'fas fa-sort-down': isActive && order === 'desc',\n              'fas fa-sort': !isActive,\n            });\n\n            return (\n              <th key={header}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {header}\n                  {index < 4 && (\n                    <a onClick={() => handleSort(header.toLowerCase())}>\n                      <span className=\"icon\">\n                        <i className={iconClass} />\n                      </span>\n                    </a>\n                  )}\n                </span>\n              </th>\n            );\n          })}\n        </tr>\n\n      </thead>\n      <tbody>\n        {filteredPeople.map((person) => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === selectedPersonSlug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} onSelect={handleSelectPerson} />\n            </td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {getParent(person.motherName) ? (\n                <PersonLink\n                  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  person={getParent(person.motherName)!}\n                  onSelect={handleSelectPerson}\n                />\n              ) : (\n                person.motherName || '-'\n              )}\n            </td>\n            <td>\n              {getParent(person.fatherName) ? (\n                <PersonLink\n                  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  person={getParent(person.fatherName)!}\n                  onSelect={handleSelectPerson}\n                />\n              ) : (\n                person.fatherName || '-'\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Gender } from '../types/Gender';\n\nconst MALE_GENDER = 'm';\nconst FEMALE_GENDER = 'f';\n\nexport const PeoplePage: React.FC = () => {\n  const [searchParams, setSearcParams] = useSearchParams();\n  const params = new URLSearchParams(searchParams);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n  const [selectedPersonSlug, setSelectedPersonSlug] = useState<string>('');\n  const [filterGenderStatus, setFilterGenderStatus]\n  = useState<Gender>(Gender.ALL);\n  const [filteredPeople, setFilteredPeople] = useState<Person[]>([]);\n  const [selectedCenturies, setSelectedCenturies] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n  const { slug } = useParams();\n\n  const getCentury = (year: number) => {\n    return Math.ceil(year / 100).toString();\n  };\n\n  const handleSearchChange = (event: { target: { value: string; }; }) => {\n    setSearchQuery(event.target.value);\n\n    params.set('query', event.target.value);\n    setSearcParams(params);\n\n    if (event.target.value.length === 0) {\n      setSearcParams('');\n    }\n  };\n\n  useEffect(() => {\n    let filtered = [...people];\n\n    if (searchQuery) {\n      filtered = filtered.filter(person => person\n        .name.toLowerCase().includes(searchQuery.toLowerCase()));\n    }\n\n    switch (filterGenderStatus) {\n      case Gender.MALE:\n        filtered = filtered.filter(person => person.sex === MALE_GENDER);\n        break;\n      case Gender.FEMALE:\n        filtered = filtered.filter(person => person.sex === FEMALE_GENDER);\n        break;\n      case Gender.ALL:\n      default:\n        break;\n    }\n\n    if (selectedCenturies.length > 0) {\n      filtered = filtered.filter(person => selectedCenturies\n        .includes(getCentury(person.born)));\n    }\n\n    if (sort) {\n      switch (sort) {\n        case 'name':\n        case 'sex':\n          filtered = filtered.sort((a, b) => {\n            return order === 'desc'\n              ? b[sort].localeCompare(a[sort])\n              : a[sort].localeCompare(b[sort]);\n          });\n          break;\n        case 'born':\n        case 'died':\n          filtered = filtered.sort((a, b) => {\n            return order === 'desc'\n              ? b[sort] - a[sort]\n              : a[sort] - b[sort];\n          });\n          break;\n        default:\n      }\n    }\n\n    setFilteredPeople(filtered);\n  }, [people, searchQuery, filterGenderStatus, selectedCenturies, sort, order]);\n\n  const handleSelectPerson = (selectedSlug: string) => {\n    setSelectedPersonSlug(selectedSlug);\n  };\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        const data = await getPeople();\n\n        setPeople(data);\n        if (slug) {\n          setSelectedPersonSlug(slug);\n        }\n      } catch (error) {\n        setErrorMessage('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, [slug]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters\n                setSearchQuery={setSearchQuery}\n                searchQuery={searchQuery}\n                handleSearchChange={handleSearchChange}\n                selectedCenturies={selectedCenturies}\n                setSelectedCenturies={setSelectedCenturies}\n                filterGenderStatus={filterGenderStatus}\n                setFilterGenderStatus={setFilterGenderStatus}\n              />\n            </div>\n\n            <div className=\"column\">\n              <div className=\"box table-container\">\n                {!errorMessage && !people.length && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n                {!filteredPeople.length ? (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people matching the current search criteria\n                  </p>\n                ) : (\n                  <PeopleTable\n                    filteredPeople={filteredPeople}\n                    selectedPersonSlug={selectedPersonSlug}\n                    handleSelectPerson={handleSelectPerson}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  const getActive = (isActive:boolean) => `navbar-item ${isActive && 'has-background-grey-lighter'}`;\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => getActive(isActive)}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => getActive(isActive)}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { NotFoundPage } from '../pages/NotFoundPage';\nimport { HomePage } from '../pages/HomePage';\nimport { PeoplePage } from '../pages/PeoplePage';\nimport { App } from '../App';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './components/Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}